// loss tells us how bad we are at the task
// we use it to minimize badness
var loss = new HingeLoss(new HingeLoss.Arguments() { Margin = 1 });

// create estimator
var estimator = reader.MakeNewEstimator()
    // STEP 1: Numberize the text
    .Append(row => (
    // TARGET: convert the text category into a number
label: row.Category.ToKey(),
// SOURCE: convert the sentence into a vector
features: row.Text.FeaturizeText()))
// STEP 2: Create ML model to do predictions
.Append(row => (
// pass through label
row.label,
// fancy linear model with SDCA optimization
score: row.label.PredictSdcaClassification(row.features, loss: loss)))
// STEP 3: output atual predictions
.Append(row => (
// convert predicted value to actual category
Predicted: row.score.predictedLabel.ToValue(),
// pass through label and score for validation 
row.label,
row.score
));